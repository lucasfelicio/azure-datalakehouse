parameters:
  - name: stageId
    type: string
  - name: env
    type: string
  - name: environmentName
    type: string
  - name: resourceGroupName
    type: string
  - name: serviceConnection
    type: string
  - name: notebooksPath
    type: string
  
stages:
  - stage: "${{parameters.stageID}}"
    displayName: "Deploying to Databricks ${{parameters.env}}"      
    jobs:
    - job: DeployToDev
      displayName: "Deploy to Dev Environment"
      steps:
        - task: AzureCLI@2
          inputs:
            azureSubscription: '$(AZURE_SUBSCRIPTION)'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              # Obter o token de acesso do Databricks usando a service connection
              DATABRICKS_AAD_TOKEN=$(az account get-access-token --resource https://databricks.azure.net --query accessToken -o tsv)

              # Obter a URL do Databricks workspace
              DATABRICKS_URL=$(az databricks workspace show --resource-group $(DATABRICKS_RESOURCE_GROUP) --name $(DATABRICKS_WORKSPACE_NAME) --query workspaceUrl -o tsv)

              # Instalar o cliente Databricks CLI
              pip install databricks-cli

              # Configurar o Databricks CLI para usar o token de AAD
              databricks configure --aad-token <<EOF
              $DATABRICKS_URL
              $DATABRICKS_AAD_TOKEN
              EOF

              # Mover arquivos para a pasta no Databricks
              for file in notebooks/*; do
                databricks workspace import --overwrite $file /team_engineering/$(basename $file)
              done
